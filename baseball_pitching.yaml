############
## SPACES ##
############

# Calculated from respective position of feet at Release
# Assuming Release is entered manually in QTM for now

- parameter: Feet_unit_vector
  where: 
    name: Pitching*
  steps:
    - subtract: [LForefoot2@Release, RForefoot2@Release]
    - convert:
      from: mm
      to: m
    - unitVector:
    - round:

- space: VirtualLab
  origin: [0,0,0]
  primaryAxis: [Feet_unit_vector?name=Pitching*]
  secondaryAxis: [[0,0,0], [0,0,1]]
  order: yz


############
## EVENTS ##
############
- event: PLOTSTART
  where: 
    name: Pitching*
  steps:
    - import: SETUP

- event: PLOTEND
  where: 
    name: Pitching*
  steps:
    - import: Release100msAfter


- event: MaxKneeHeight
  where: 
    name: Pitching*
  steps:
    - peakFinder: LeftLeg.z
      width: 100

- event: Footstrike
  where: 
    name: Pitching*
  steps:
    - lowpass: LForeFoot2
      extrapolate: 200
      order: 2
      cutoff: 12
    - velocity:
    - convert:
      from: mm
      to: m
    - magnitude:
    - threshold:
      value: 0.4
      direction: down
    - eventMask: [$prev, MaxKneeHeight, Release]

- event: SETUP
  where: 
    name: Pitching*
  steps:
    - velocity: LHeelBack.z
    - threshold:
      value: 0.02
      direction: up
      # to do: last instance before MaxKneeHeight

- event: Release100msAfter
  where: 
    name: Pitching*
  steps:
    - divide: [$framerate, 10] 
    - add: [Release, $prev] # use '0.1s' after available

- event: Max_Elbow_Flex
  where: 
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Angle.x
    - peakFinder:
      width: 100
      distance: 1000
    - eventMask: [$prev, Footstrike, Release100msAfter]

- event: Max_Forearm_PronSup
  where: 
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Angle.z
    - peakFinder:
      distance: 10
    - eventMask: [$prev, Footstrike, Release100msAfter]

- event: Max_Elbow_Flex_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Ang_Vel.x
    - lowpass:
      order: 6
      cutoff: 12
    - peakFinder:
      distance: 30
    - eventMask: [$prev, Footstrike, Release100msAfter]

- event: Max_Forearm_PronSup_Ang_Vel # fix it after we can find max values instead of peak
  where: 
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Ang_Vel.z
    - lowpass:
      order: 6
      cutoff: 12
    - peakFinder:
      distance: 30
    - eventMask: [$prev, Footstrike, Release100msAfter]

- event: Max_Shoulder_Int_Rot
  where: 
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle.z
    - peakFinder:
      distance: 10
    - eventMask: [$prev, SETUP, Release]

- event: EOF
  where: 
    name: Pitching*
  steps:
    - subtract: [$length, 1]

- event: Max_Shoulder_Int_Rot_FollowThru
  where: 
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle.z
    - negate:
    - peakFinder:
      distance: 1000
    - eventMask: [$prev, Release, EOF]

- event: Max_Shoulder_Rot
  where: 
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle.z
    - peakFinder:
      distance: 10
    - eventMask: [$prev, SETUP, Release]

- event: MaxPelvisVel
  where: 
    name: Pitching*
  steps:
    - eventMask: [Pelvis_Ang_Vel.x, SETUP, Release100msAfter]
    - max:

- event: MaxThoraxVel
  where: 
    name: Pitching*
  steps:
    - eventMask: [Thorax_Ang_Vel.x, SETUP, Release100msAfter]
    - max:

- event: MaxHumerusVel
  where: 
    name: Pitching*
  steps:
    - eventMask: [Pitching_Humerus_Ang_Vel.x, SETUP, Release100msAfter]
    - max:

- event: MaxHandVel
  where: 
    name: Pitching*
  steps:
    - eventMask: [Pitching_Hand_Ang_Vel.x, SETUP, Release100msAfter]
    - max:

############
## SERIES ##
############
# find out which max hand linear velocity magnitude is higher
- parameter: Left_Hand_Vel_max
  where: 
    name: Pitching*
  steps:
    - velocity: LeftHand
    - magnitude:
    - max:

- parameter: Right_Hand_Vel_max
  where: 
    name: Pitching*
  steps:
    - velocity: RightHand
    - magnitude:
    - max:

# define body side
- parameter: PitchingArm
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: RightArm
      else: LeftArm

- parameter: PitchingForearm
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: RightForearm
      else: LeftForearm

- parameter: PitchingHand
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: RightHand
      else: LeftHand

- parameter: LeadThigh
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: RightUpLeg
      else: LeftUpLeg

- parameter: LeadShank
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: RightLeg
      else: LeftLeg

- parameter: BackFoot
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: RightFoot
      else: LeftFoot

- parameter: Hand_Convention
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: [1, -1, 1]
      else: [1, -1, 1]

- parameter: Shoulder_Convention
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: [1, -1, -1]
      else: [1, -1, -1]

- parameter: Knee_Convention
  where: 
    name: Pitching*
  steps:
    - if: Right_Hand_Vel_max > Left_Hand_Vel_max
      then: [-1, -1, -1]
      else: [-1, -1, -1]

# Pitching Hand Angle
- parameter: Pitching_Hand_Angle
  where: 
    name: Pitching*
  steps:
    - angle: [PitchingForearm, PitchingHand]
    - multiply: [$prev, Hand_Convention]

# Pitching hand ang vel
- parameter: Pitching_Hand_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - angularVelocity: [PitchingHand]
      space: VirtualLab
    - multiply: [$prev, Hand_Convention]

- parameter: Pitching_Elbow_Angle
  where: 
    name: Pitching*
  steps:
    - angle: [PitchingArm, PitchingForearm]

- parameter: Pitching_Elbow_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - angularVelocity: [PitchingArm, PitchingForearm]

# Pitching shoulder angle
- parameter: Pitching_Shoulder_Angle
  where: 
    name: Pitching*
  steps:
    - angle: [Spine2, PitchingArm]
      rotationOrder: XYZ # we have to implement Euler sequence and use ZYZ
    - multiply: [$prev, Shoulder_Convention]

- parameter: Pitching_Shoulder_Angle_XYZ
  where: 
    name: Pitching*
  steps:
    - angle: [Spine2, PitchingArm]
    - multiply: [$prev, Shoulder_Convention]

# Pitching shoulder angular velocity
- parameter: Pitching_Shoulder_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - angularVelocity: [Spine2, PitchingArm]
    #- lowpass:
    - multiply: [$prev, Shoulder_Convention]

# Lead Knee Angle
- parameter: Lead_Knee_Angle
  where: 
    name: Pitching*
  steps:
    - angle: [LeadThigh, LeadShank]
    - multiply: [$prev, Knee_Convention]

# Lead Knee Ang Vel
- parameter: Lead_Knee_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - angularVelocity: [LeadThigh, LeadShank]
    - multiply: [$prev, Knee_Convention]

# Trunk wrt Pelvis Angle
- parameter: Trunk_wrt_Pelvis_Angle
  where: 
    name: Pitching*
  steps:
    - angle: [Hips, Spine2]
    - multiply: [$prev, [-1, -1, -1]]

# Trunk angle
- parameter: Trunk_Angle
  where: 
    name: Pitching*
  steps:
    - angle: [Spine2]
      space: VirtualLab
    - multiply: [$prev, [-1, -1, -1]]

# Trunk angular velocity
- parameter: Thorax_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - angularVelocity: [Spine2]
      space: VirtualLab
    - lowpass:
    - multiply: [$prev, [-1, -1, -1]]

# Pelvis angle
- parameter: Pelvis_Angle
  where: 
    name: Pitching*
  steps:
    - angle: [Hips]
      space: VirtualLab
    - multiply: [$prev, [-1, -1, -1]]

# Pelvis angular velocity
- parameter: Pelvis_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - angularVelocity: [Hips]
      space: VirtualLab
    - multiply: [$prev, [-1, -1, 1]]

# Back Foot wrt lab
- parameter: Back_Foot_wrt_Lab
  where: 
    name: Pitching*
  steps:
    - angle: [BackFoot]
      space: VirtualLab

# Pitching humerus ang vel
- parameter: Pitching_Humerus_Ang_Vel
  where: 
    name: Pitching*
  steps:
    - angularVelocity: [PitchingArm]
      space: VirtualLab

# Hip Shoulders Separation
- parameter: Hip Shoulder Sep
  where: 
    name: Pitching*
  steps:
    - angle: [Hips, Spine2]
      rotationOrder: ZYX
    - multiply: [$prev, [-1, -1, -1]]

#--------------
# PAF fields
#--------------

- parameter: BALL_RELEASE_SPEED
  where:
    name: Pitching*
  steps:
    - import: $field(Ball speed, measurement, numeric)

- parameter: SPIN_RATE
  where:
    name: Pitching*
  steps:
    - import: $field(Spin rate, measurement, numeric)

- parameter: SPIN_AXIS
  where:
    name: Pitching*
  steps:
    - import: $field(Spin axis, measurement, numeric)


#############
## METRICS ##
#############
- parameter: STRIDE_LENGTH
  where:
    name: Pitching*
  steps:
    - distance: [LeftFoot@SETUP, RightFoot@SETUP]
      #space: VirtualLab
    - abs:
    - convert:
      from: mm
      to: m

- parameter: STRIDE_LENGTH_MEAN_PERCENT
  where:
    name: Pitching*
  steps:
    - divide: [STRIDE_LENGTH, $field(Height)]
    - multiply: [$prev, 100]

- parameter: Pitching_Shoulder_Angle@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle@Footstrike

- parameter: Pitching_Shoulder_Angle@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle@Max_Shoulder_Int_Rot_FollowThru

- parameter: Pitching_Shoulder_Angle@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle@Max_Shoulder_Rot

- parameter: Pitching_Shoulder_Angle@Release
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle@Release

- parameter: Pitching_Shoulder_Angle_Max
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Angle
    - eventMask: [$prev, MaxKneeHeight, Release]
    - max:

- parameter: Shoulder_Vel_Min_Abs
  where:
    name: Pitching*
  steps:
    - eventMask: [Pitching_Shoulder_Ang_Vel, MaxKneeHeight, Release100msAfter]
    - min:
    - abs:

- parameter: Pitching_Shoulder_Ang_Vel@Release
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Ang_Vel@Release

- parameter: Pitching_Shoulder_Ang_Vel@Release_Abs
  where:
    name: Pitching*
  steps:
    - abs: Pitching_Shoulder_Ang_Vel@Release

- parameter: Hip Shoulder Sep@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Hip Shoulder Sep@Footstrike

- parameter: Hip Shoulder Sep@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Hip Shoulder Sep@Max_Shoulder_Int_Rot_FollowThru

- parameter: Hip Shoulder Sep@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Hip Shoulder Sep@Max_Shoulder_Rot

- parameter: Hip Shoulder Sep@Release
  where:
    name: Pitching*
  steps:
    - import: Hip Shoulder Sep@Release

- parameter: Pitching_Elbow_Angle@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Angle@Footstrike

- parameter: Pitching_Elbow_Angle@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Angle@Max_Shoulder_Rot

- parameter: Pitching_Elbow_Angle@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Angle@Max_Shoulder_Int_Rot_FollowThru

- parameter: Pitching_Elbow_Angle@Release
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Angle@Release

- parameter: Pitching_Elbow_Ang_Vel@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Ang_Vel@Footstrike

- parameter: Pitching_Elbow_Ang_Vel@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Ang_Vel@Max_Shoulder_Rot

- parameter: Pitching_Elbow_Ang_Vel@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Ang_Vel@Max_Shoulder_Int_Rot_FollowThru

- parameter: Pitching_Elbow_Ang_Vel@Release
  where:
    name: Pitching*
  steps:
    - import: Pitching_Elbow_Ang_Vel@Release

- parameter: Pitching_Hand_Angle@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Pitching_Hand_Angle@Footstrike

- parameter: Pitching_Hand_Angle@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Pitching_Hand_Angle@Max_Shoulder_Rot

- parameter: Pitching_Hand_Angle@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Pitching_Hand_Angle@Max_Shoulder_Int_Rot_FollowThru

- parameter: Pitching_Hand_Angle@Release
  where:
    name: Pitching*
  steps:
    - import: Pitching_Hand_Angle@Release

- parameter: Lead_Knee_Angle@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Angle@Footstrike

- parameter: Lead_Knee_Angle@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Angle@Max_Shoulder_Rot

- parameter: Lead_Knee_Angle@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Angle@Max_Shoulder_Int_Rot_FollowThru

- parameter: Lead_Knee_Angle@Release
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Angle@Release

- parameter: Lead_Knee_Ang_Vel@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Ang_Vel@Footstrike

- parameter: Lead_Knee_Ang_Vel@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Ang_Vel@Max_Shoulder_Rot

- parameter: Lead_Knee_Ang_Vel@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Ang_Vel@Max_Shoulder_Int_Rot_FollowThru

- parameter: Lead_Knee_Ang_Vel@Release
  where:
    name: Pitching*
  steps:
    - import: Lead_Knee_Ang_Vel@Release


- parameter: Trunk_wrt_Pelvis_FE@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Trunk_wrt_Pelvis_Angle@Footstrike

- parameter: Trunk_wrt_Pelvis_FE@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Trunk_wrt_Pelvis_Angle@Max_Shoulder_Rot

- parameter: Trunk_wrt_Pelvis_FE@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Trunk_wrt_Pelvis_Angle@Max_Shoulder_Rot

- parameter: Trunk_wrt_Pelvis_FE@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Trunk_wrt_Pelvis_Angle@Max_Shoulder_Int_Rot_FollowThru

- parameter: Pelvis_Ang_Vel_max
  where:
    name: Pitching*
  steps:
    - max: Pelvis_Ang_Vel

- parameter: Thorax_Ang_Vel_max
  where:
    name: Pitching*
  steps:
    - max: Thorax_Ang_Vel

- parameter: Pitching_Humerus_Ang_Vel_max
  where:
    name: Pitching*
  steps:
    - max: Pitching_Humerus_Ang_Vel

- parameter: Pitching_Hand_Ang_Vel_max
  where:
    name: Pitching*
  steps:
    - max: Pitching_Hand_Ang_Vel

- parameter: Pelvis_Angle@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Pelvis_Angle@Footstrike

- parameter: Pelvis_Angle@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Pelvis_Angle@Max_Shoulder_Rot

- parameter: Trunk_Angle@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Trunk_Angle@Footstrike

- parameter: Trunk_Angle@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Trunk_Angle@Max_Shoulder_Rot

- parameter: Trunk_Angle@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Trunk_Angle@Max_Shoulder_Int_Rot_FollowThru

- parameter: Trunk_Angle@Release
  where:
    name: Pitching*
  steps:
    - import: Trunk_Angle@Release

- parameter: Pitching_Shoulder_Angle_Min
  where:
    name: Pitching*
  steps:
    - eventMask: [Pitching_Shoulder_Angle, MaxKneeHeight, Release]
    - min:

- parameter: Back_Foot_wrt_Lab@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Back_Foot_wrt_Lab@Footstrike

# to do : "id": "kinematic-sequence-vel-table",

- parameter: MaxPelvisVelTime
  where:
    name: Pitching*
  steps:
    - eventDuration: [MaxPelvisVel, SETUP]

- parameter: MaxThoraxVelTime
  where:
    name: Pitching*
  steps:
    - eventDuration: [MaxThoraxVel, SETUP]

- parameter: MaxHumerusVelTime
  where:
    name: Pitching*
  steps:
    - eventDuration: [MaxHumerusVel, SETUP]

- parameter: MaxHandVelTime
  where:
    name: Pitching*
  steps:
    - eventDuration: [MaxHandVel, SETUP]

- parameter: Pitching_Elbow_Ang_Vel_min
  where:
    name: Pitching*
  steps:
    - eventMask: [Pitching_Elbow_Ang_Vel, Footstrike, Release100msAfter]
    - min:

- parameter: Trunk Rot wrt Pelvis Rot@Footstrike
  where:
    name: Pitching*
  steps:
    - subtract: [Trunk_Angle@Footstrike, Pelvis_Angle@Footstrike]

- parameter: Trunk Rot wrt Pelvis Rot@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - subtract: [Trunk_Angle@Max_Shoulder_Int_Rot_FollowThru, Pelvis_Angle@Max_Shoulder_Int_Rot_FollowThru]

- parameter: Trunk Rot wrt Pelvis Rot@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - subtract: [Trunk_Angle@Max_Shoulder_Rot, Pelvis_Angle@Max_Shoulder_Rot]

- parameter: Trunk Rot wrt Pelvis Rot@Release
  where:
    name: Pitching*
  steps:
    - subtract: [Trunk_Angle@Release, Pelvis_Angle@Release]

- parameter: Pitching_Shoulder_Ang_Vel@Footstrike
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Ang_Vel@Footstrike

- parameter: Pitching_Shoulder_Ang_Vel@Max_Shoulder_Int_Rot_FollowThru
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Ang_Vel@Max_Shoulder_Int_Rot_FollowThru

- parameter: Pitching_Shoulder_Ang_Vel@Max_Shoulder_Rot
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Ang_Vel@Max_Shoulder_Rot

- parameter: Pitching_Shoulder_Ang_Vel@Release
  where:
    name: Pitching*
  steps:
    - import: Pitching_Shoulder_Ang_Vel@Release





